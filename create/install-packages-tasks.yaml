---
- name: Install packages that allow apt to be used over HTTPS
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg-agent
    - software-properties-common
    - cgroup-tools
    - python3-kubernetes
    - gnupg 
    - lsb-release

- name: Create directory for Docker's GPG key
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Add Docker's official GPG key
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    keyring: /etc/apt/keyrings/docker.gpg
    state: present

- name: Print architecture variables
  ansible.builtin.debug:
    msg: "Architecture: {{ arch_mapping[ansible_architecture] | default(ansible_architecture) }}, Codename: {{ ansible_lsb.codename }}"

- name: Add Docker repository
  ansible.builtin.apt_repository:
    repo: >-
      deb [arch={{ arch_mapping[ansible_architecture] | default(ansible_architecture) }}
      signed-by=/etc/apt/keyrings/docker.gpg]
      https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable
    filename: docker
    state: present

- name: Add an apt signing key for Kubernetes
  apt_key:
    url: https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key
    state: present
    keyring: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

- name: Adding apt repository for Kubernetes
  apt_repository:
    repo: deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /
    state: present
    filename: kubernetes.list

- name: Install containerd
  apt: 
    name: "containerd.io=1.6.21-1"
    state: present
    update_cache: yes

- name: Install Kubernetes binaries
  apt: 
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - "kubelet={{ KUBERNETES_VERSION }}-1.1"
      - "kubeadm={{ KUBERNETES_VERSION }}-1.1"
      - "kubectl={{ KUBERNETES_VERSION }}-1.1"

- name: start containerd
  systemd: 
    name: containerd
    state: restarted
    daemon_reload: yes

- name: start kubelet
  systemd: 
    name: kubelet
    state: restarted
    daemon_reload: yes
